{"version":3,"sources":["Images/logo.png","Images/firstName.png","Images/lastName.png","Images/enter.png","Components/Logo.tsx","Components/PixiComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Logo","props","logoIncrement","tick","delta","console","log","state","rotation","y","windowHeight","lineExpandAnimation","pulseAnimation","setState","x","windowWidth","height","logoScale","lineEnd1","lineEnd2","nameX","nameY","nameAlpha","enterAlpha","this","app","ticker","add","remove","fadeInNameAnimation","Promise","resolve","setTimeout","fadeInEnter","draw","g","beginFill","lineStyle","moveTo","lineTo","image","FirstName","width","anchor","alpha","LastName","EnterImg","logo","scale","React","Component","PixiComponent","window","innerWidth","innerHeight","addEventListener","updateDimensions","bind","_width","_height","options","backgroundColor","App","className","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.31a66362.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.aec2a3f0.png\";","module.exports = __webpack_public_path__ + \"static/media/firstName.cdbaeb6a.png\";","module.exports = __webpack_public_path__ + \"static/media/lastName.7c1ae4ae.png\";","module.exports = __webpack_public_path__ + \"static/media/enter.bfd5ae02.png\";","import logo from '../Images/logo.png';\nimport React from 'react';\nimport { Sprite, Graphics, Text} from '@inlet/react-pixi'\nimport * as PIXI from 'pixi.js';\nimport FirstName from '../Images/firstName.png';\nimport LastName from '../Images/lastName.png';\nimport EnterImg from '../Images/enter.png';\n\ntype LogoProps = {\n    height: number,\n    width: number,\n    windowWidth: number,\n    windowHeight: number,\n    app: PIXI.Application\n}\n\ntype LogoState = {\n    x: number,\n    y: number,\n    logoScale: number,\n    rotation: number,\n    lineEnd1: number,\n    lineEnd2: number,\n    nameX: number,\n    nameY: number,\n    nameAlpha:number,\n    enterAlpha: number\n\n}\nclass Logo extends React.Component<LogoProps, LogoState>{\n    \n    private logoIncrement:number;\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            x: this.props.windowWidth / 2,\n            y: this.props.windowHeight + this.props.height,\n            logoScale: .5,\n            rotation: 0,\n            lineEnd1: this.props.windowWidth/2,\n            lineEnd2: this.props.windowWidth/2,\n            nameX: this.props.windowWidth/4,\n            nameY: this.props.windowHeight/3,\n            nameAlpha:0,\n            enterAlpha:0\n\n        }\n\n        this.logoIncrement = .001;\n    }\n    componentDidMount() {\n        this.props.app.ticker.add(this.tick);\n    }\n\n    componentWillUnmount() {\n        this.props.app.ticker.remove(this.tick);\n    }\n\n    tick = (delta: number) => {\n        console.log(this.state.rotation);\n\n        if (this.state.y < this.props.windowHeight / 2) {\n            // this.componentWillUnmount();\n            this.lineExpandAnimation();\n            this.pulseAnimation();\n        }\n        else {\n            this.setState({\n                y: this.state.y - (this.props.windowHeight/40) * delta\n            })\n        }\n    }\n\n    lineExpandAnimation() {\n\n        if(this.state.lineEnd1 <= 0 && this.state.lineEnd2 >= this.props.windowWidth/100){\n            this.fadeInNameAnimation();\n        }\n        else{\n            this.setState({\n                lineEnd1: this.state.lineEnd1 - 15,\n                lineEnd2: this.state.lineEnd2 + 15\n            })\n        }\n\n        \n    }\n\n    async fadeInNameAnimation(){\n        if(this.state.nameY < (this.props.windowHeight/2.1)){\n            this.setState({\n                nameY: this.state.nameY + 10 ,\n                nameAlpha: this.state.nameAlpha + .1\n            })\n        }\n        else{\n            await new Promise(resolve => setTimeout(resolve, 1000))\n            this.fadeInEnter();\n        }\n    }\n\n    fadeInEnter(){\n        if(this.state.enterAlpha < 1){\n            this.setState({\n                enterAlpha: this.state.enterAlpha + .02\n            })\n        }\n\n    }\n\n    async pulseAnimation(){\n        this.setState({\n            logoScale: this.state.logoScale + this.logoIncrement\n        })\n\n        if(this.state.logoScale >= .55 || this.state.logoScale <= .50){\n            this.logoIncrement = -this.logoIncrement;\n        }\n\n        await new Promise(resolve => setTimeout(resolve, 100))\n    }\n\n\n    render() {\n        \n        return (\n            <>\n            <Graphics \n                draw={g => {\n                    g.beginFill(0x323336)\n                    g.lineStyle(3, 0x323336, 1)\n                    g.moveTo(this.props.windowWidth/2, this.props.windowHeight/2)\n                    g.lineTo(this.state.lineEnd1, this.props.windowHeight/2)\n                }\n            }\n            />\n\n            <Graphics \n                draw={g => {\n                    g.beginFill(0x323336)\n                    g.lineStyle(3, 0x323336, 1)\n                    g.moveTo(this.props.windowWidth/2, this.props.windowHeight/2)\n                    g.lineTo(this.state.lineEnd2, this.props.windowHeight/2)\n                }\n            }   \n            />\n\n            <Sprite image={FirstName}\n                width={319}\n                height={127}\n                x={this.props.windowWidth/4}\n                y={(this.state.nameY) - 63}\n                anchor={[0.5, 0.5]}\n                alpha={this.state.nameAlpha}\n            />\n\n            <Sprite image={LastName}\n                width={319}\n                height={127}\n                x={this.props.windowWidth - this.state.nameX}\n                y={(this.state.nameY) - 63}\n                anchor={[0.5, 0.5]}\n                alpha={this.state.nameAlpha}\n            />\n\n            <Sprite image={EnterImg}\n                width={478}\n                height={90}\n                x={this.props.windowWidth /2}\n                y={this.props.windowHeight - (this.props.windowHeight / 5)}\n                anchor={[0.5, 0.5]}\n                alpha={this.state.enterAlpha}\n            />\n            \n            <Sprite image={logo}\n                width={this.props.width}\n                height={this.props.height}\n                x={this.state.x}\n                y={this.state.y}\n                anchor={[0.5, 0.5]}\n                rotation={this.state.rotation}\n                scale={this.state.logoScale}\n            />\n            </>\n            \n        );\n    }\n\n}\n\nexport default Logo;","import React from 'react';\nimport Logo from './Logo';\nimport { Stage, AppConsumer } from '@inlet/react-pixi';\n\ntype PixiComponentProps = {\n\n}\n\ntype PixiComponentState = {\n    width: number,\n    height: number\n}\n\nclass PixiComponent extends React.Component<PixiComponentProps,PixiComponentState>{\n\n    constructor(props: any){\n        super(props);\n\n        this.state = {\n            width: window.innerWidth,\n            height: window.innerHeight\n        };\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n    }\n\n    updateDimensions() {\n        let _width: number = window.innerWidth;\n        let _height: number = window.innerHeight;\n\n        this.setState({\n            height: _height,\n            width: _width\n        })\n    }\n\n    render(){\n        let options: Object = {\n            backgroundColor:0x232324\n        }\n        return(\n            <Stage width={this.state.width} height={this.state.height} options={options}>\n                <AppConsumer>{app => <Logo \n                width={430} \n                height={521} \n                windowWidth = {this.state.width} \n                windowHeight={this.state.height} \n                app={app} \n                />}</AppConsumer>\n            </Stage>\n        );\n    }\n}\n\nexport default PixiComponent;","import React from 'react';\nimport logo from './logo.svg';\nimport PixiComponent from './Components/PixiComponent';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <PixiComponent/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}